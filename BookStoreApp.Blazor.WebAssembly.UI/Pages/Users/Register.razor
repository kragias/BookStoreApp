@page "/users/register"
@inject IClient HttpClient
@inject NavigationManager NavManager

<h3>Register New Account</h3>

@if(string.IsNullOrEmpty(Msg) == false)
{
    <div class="alert alert-danger">
        <p>@Msg</p>
    </div>
}
<div class="card-body">
    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
            <ValidationMessage For="@(() => RegistrationModel.Email)" />
        </div>
        <div class="form-group">
            <label for="first name">FIrst Name</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
            <ValidationMessage For="@(() => RegistrationModel.FirstName)" />
        </div>
        <div class="form-group">
            <label for="last name">Last Name</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
            <ValidationMessage For="@(() => RegistrationModel.LastName)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
            <ValidationMessage For="@(() => RegistrationModel.Password)" />
        </div>

        <button type="submit" class="btn btn-primary btn-block">Register</button>

    </EditForm>
</div>

@code {
    UserDto RegistrationModel = new UserDto
    {
            Role = "User"
    };
    String Msg = string.Empty;

    private async Task HandleRegistration()
    {

        try
        {
            await HttpClient.RegisterAsync(RegistrationModel);
            NavigateToLogin();
        }
        catch (ApiException ex)
        {
            if(ex.StatusCode >= 200 && ex.StatusCode <=299)
            {
                NavigateToLogin();
            }
            Msg = ex.Response;

        }

    }  

    private void NavigateToLogin()
    {
        NavManager.NavigateTo("/users/Login");
    }
}
